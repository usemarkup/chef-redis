#!/bin/sh
#
# Simple Redis init.d script conceived to work on Linux systems
# as it does use of the /proc filesystem.
#
# description: Redis is an in memory key-value store database
#
### BEGIN INIT INFO
# Provides: redis6379
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Required-Start:
# Required-Stop:
# Description: redis6379 init script
### END INIT INFO

REDISNAME=<%= @name %>
REDISPORT=<%= @port %>
EXEC="runuser <%= @user %> -c \"<%= File.join(@bin_path, 'redis-server') %> <%= @configdir %>/${REDISNAME}.conf --daemonize yes\""
CLIEXEC=<%= @bin_path %>/redis-cli

PIDFILE=<%= @piddir %>/redis_${REDISNAME}.pid
if [ ! -d <%= @piddir %> ]; then
    mkdir -p <%= @piddir %>
    chown <%= @user %>  <%= @piddir %>
fi

ulimit -n 10032

case "$1" in
    status)
        if [ -f $PIDFILE ]
        then
          echo "redis$REDISNAME $PIDFILE exists, pid is $(cat $PIDFILE), should be running"
          ps -p $(cat $PIDFILE) >/dev/null 2>&1
          exit $?
        else
          echo "redis$REDISNAME $PIDFILE doesn't exist"
          exit 3
        fi
        ;;
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                echo "Starting Redis server..."
                eval $EXEC
        fi
        ;;
    stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."


                $CLIEXEC  -p 6379 shutdown

                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
    *)
        echo "Please use start or stop as first argument"
        ;;
esac
